//symbols. they start with an underscore so they don't appear in the parse tree (Lark convention)

_SPACE: " "+
_COMMA: _SPACE? (","|"،"|"，"|"、") _SPACE? //support latin and arabic and Chinese commas and always allow these to be surrounded by spaces
_COLON: _SPACE? ":" _SPACE? | _SPACE? "：" _SPACE?
_LEFT_BRACKET : _SPACE? "(" _SPACE? | _SPACE? "（" _SPACE?
_RIGHT_BRACKET : _SPACE? ")" _SPACE? | _SPACE? "）" _SPACE?
_LEFT_SQUARE_BRACKET :  _SPACE? "[" _SPACE?
_RIGHT_SQUARE_BRACKET : _SPACE? "]" _SPACE?
_HASH: "#"
_SMALLER : _SPACE? "<" _SPACE?
_LARGER: _SPACE? ">" _SPACE?
_EQUALS: _SPACE? "=" _SPACE? //always allow = to be surrounded by spaces
_DOUBLE_EQUALS: _SPACE? "==" _SPACE?
_NOT_EQUALS: _SPACE? "!=" _SPACE?
_SMALLER_EQUALS : _SPACE? "<=" _SPACE?
_LARGER_EQUALS: _SPACE? ">=" _SPACE?
_SINGLE_QUOTE: "'" | "‘" | "’"
_DOUBLE_QUOTE: "\"" | "“" | "”"
_QUOTE: _SINGLE_QUOTE | _DOUBLE_QUOTE
_PLUS: _SPACE? "+" _SPACE?
_MINUS: _SPACE? "-" _SPACE?
_MULTIPLY: _SPACE? "*" _SPACE?
_DIVIDE: _SPACE? "/" _SPACE?

start: program
program: _EOL* (command _EOL+)* command?
command: print | ask | echo | turtle | error_invalid_space | error_invalid | empty_line

print: _PRINT (text)?
ask: _ASK (text)?
echo: _ECHO (text)?
turtle: _FORWARD ((number | text))? -> forward | _TURN ((left | right ))? -> turn | _COLOR ((black | blue | brown | gray | green | orange | pink | purple | red | white | yellow | text))? -> color
error_invalid_space: _SPACE any
error_invalid: textwithoutspaces text?
empty_line: _SPACE

any: /.+/ -> text

COMMENT: _HASH /([^\n]*)/
%ignore COMMENT

_EOL: "\r"?"\n"+

NEGATIVE_NUMBER: _MINUS /[\p{Nl}\p{Nd}\p{No}]+/ ("." /[\p{Nl}\p{Nd}\p{No}]+/)?
POSITIVE_NUMBER: /[\p{Nl}\p{Nd}\p{No}]+/ ("." /[\p{Nl}\p{Nd}\p{No}]+/)?
number: NEGATIVE_NUMBER | POSITIVE_NUMBER
INT: _MINUS? /[\p{Nl}\p{Nd}\p{No}]+/

text: /([^\n#ـ])([^\n#]*)/ -> text //anything can be parsed except for a newline and a comment hash
// to properly deal with tatweels, we also need to prevent text from starting with a tatweel,
// otherwise we might parse  قولـــ  as the printing of ___ (see #2699)
textwithoutspaces: /([^\n #]+)/ -> text //anything can be parsed except for a new line, spaces and a comment hash


// FH Sept 2021: More info on this variable format: https://www.unicode.org/reports/tr31/tr31-1.html
// Exact grammar stolen from: https://lark-parser.readthedocs.io/en/latest/classes.html

NAME: LETTER_OR_UNDERSCORE LETTER_OR_NUMERAL*

LETTER_OR_UNDERSCORE: /[\p{Lu}\p{Ll}\p{Lt}\p{Lm}\p{Lo}\p{Nl}_]+/
LETTER_OR_NUMERAL: LETTER_OR_UNDERSCORE | /[\p{Mn}\p{Mc}\p{Nd}\p{Pc}·]+/

// Internal symbol added by the preprocess_blocks function to indicate the end of blocks
_END_BLOCK: "#ENDBLOCK"
