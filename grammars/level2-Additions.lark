//add the rules after += remove those after -= and the ones after > should be at the end
command:+= error_ask_dep_2 | assign | error_echo_dep_2 | sleep -= echo > error_invalid
print: _PRINT (_print_argument)?
_print_argument: (_SPACE | textwithoutspaces)*
ask: var _IS _ASK ((_SPACE | text)*)?

//level 1 deprecated commands, for now manually added for better errors
error_ask_dep_2: _ASK (error_text_dep_2)?
error_echo_dep_2: _ECHO (error_text_dep_2)?
//text is also changed and these commands of course need the old text
error_text_dep_2: /([^\n]+)/ -> text //anything can be parsed except for a newline

//sleep
sleep: _SLEEP (INT | var_access)?

//in level 2, forward may also depend on a variable
turtle: _FORWARD (number | textwithoutspaces)? -> forward | _TURN ((number | textwithoutspaces))? -> turn | _COLOR ((black | blue | brown | gray | green | orange | pink | purple | red | white | yellow | textwithoutspaces))? -> color
assign: var _IS text -> assign

textwithoutspaces: /([^\n #]+)/ -> text
text: /([^\n#]+)/ -> text

var: NAME // used for variable definitions, e.g. a = 1
var_access: NAME // used for variable references, e.g. for i in range. It parses the same as var, but does not result in a lookup table entry
var_access_print: NAME // used for variable references in print statements, e.g. print a.  Parses the same as var_access but need to be processed differently in the tree for handling the varunquotedexception